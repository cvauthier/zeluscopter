(* Functions related to the physics of the system *)

open Parameters
open Matrix

let body_to_inertial (phi,theta,psi) = (r11,r12,r13,r21,r22,r23,r31,r32,r33) where
	r11 = (cos theta) *. (cos psi) and
	r12 = (sin phi) *. (sin theta) *. (cos psi) -. (cos phi) *. (sin psi) and
	r13 = (cos phi) *. (sin theta) *. (cos psi) +. (sin phi) *. (sin psi) and
	r21 = (cos theta) *. (sin psi) and
	r22 = (sin phi) *. (sin theta) *. (sin psi) +. (cos phi) *. (cos psi) and
	r23 = (cos phi) *. (sin theta) *. (sin psi) -. (sin phi) *. (cos psi) and
	r31 = -1.0 *. (sin theta) and
	r32 = (sin phi) *. (cos theta) and
	r33 = (cos phi) *. (cos theta)

let thetadot_to_omega((phidot,thetadot,psidot),(phi,theta,psi)) = (wx,wy,wz) where
	rec s_th = sin theta and c_th = cos theta
	and s_ph = sin phi and c_ph = cos phi
	and (wx,wy,wz) = mat33xvec3((1., 0., -1. *. s_th, 0., c_ph, c_th *. s_ph, 0., -1. *. s_ph, c_th *. c_ph),(phidot,thetadot,psidot))

let omega_to_thetadot((wx,wy,wz),(phi,theta,psi)) = (phidot,thetadot,psidot) where
	rec s_ph = sin phi and c_ph = cos phi
	and c_th = cos theta and t_th = tan theta
	and (phidot,thetadot,psidot) = mat33xvec3((1.,s_ph *. t_th,c_ph *. t_th,0.,c_ph,-1. *. s_ph,0.,s_ph /. c_th,c_ph /. c_th),(wx,wy,wz))

let acceleration ((inp1,inp2,inp3,inp4),v,theta) = acc where
	rec gravity = (0.,0.,g)
	and	friction = scalarxvec3 (-. kd, v)
	and thrust = mat33xvec3 ((body_to_inertial theta),(0.,0., -1. *. k *. (inp1 +. inp2 +. inp3 +. inp4)))
	and acc = addvec3(gravity, (scalarxvec3(1. /. m,(addvec3(friction,thrust)))))

let angular_acceleration ((inp1,inp2,inp3,inp4),omega) = omegadot where
	rec torques = (l *. k *. (inp3 -. inp1), l *. k *. (inp2 -. inp4), b *. (inp1 -. inp2 +. inp3 -. inp4))
	and (wx,wy,wz) = omega
	and (foo1,foo2,foo3) = subvec3 (torques, (crossvec3(omega,(ix *. wx, iy *. wy, iz *. wz))))
	and omegadot = (foo1 /. ix, foo2 /. iy, foo3 /. iz)

